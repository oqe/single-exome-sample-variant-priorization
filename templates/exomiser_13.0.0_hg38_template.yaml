analysis:
  analysisMode: PASS_ONLY
  frequencySources:
  - THOUSAND_GENOMES
  - TOPMED
  - UK10K
  - ESP_AFRICAN_AMERICAN
  - ESP_EUROPEAN_AMERICAN
  - ESP_ALL
  - EXAC_AFRICAN_INC_AFRICAN_AMERICAN
  - EXAC_AMERICAN
  - EXAC_SOUTH_ASIAN
  - EXAC_EAST_ASIAN
  - EXAC_FINNISH
  - EXAC_NON_FINNISH_EUROPEAN
  - EXAC_OTHER
  - GNOMAD_E_AFR
  - GNOMAD_E_AMR
  - GNOMAD_E_EAS
  - GNOMAD_E_FIN
  - GNOMAD_E_NFE
  - GNOMAD_E_OTH
  - GNOMAD_E_SAS
  - GNOMAD_G_AFR
  - GNOMAD_G_AMR
  - GNOMAD_G_EAS
  - GNOMAD_G_FIN
  - GNOMAD_G_NFE
  - GNOMAD_G_OTH
  - GNOMAD_G_SAS
  genomeAssembly: hg38
  hpoIds:
  inheritanceModes:
    AUTOSOMAL_DOMINANT: 0.1
    AUTOSOMAL_RECESSIVE_COMP_HET: 2.0
    AUTOSOMAL_RECESSIVE_HOM_ALT: 0.1
    MITOCHONDRIAL: 0.2
    X_DOMINANT: 0.1
    X_RECESSIVE_COMP_HET: 2.0
    X_RECESSIVE_HOM_ALT: 0.1
  pathogenicitySources:
  - MUTATION_TASTER
  - CADD
  steps: [ 
        #intervalFilter: {interval: 'chr10:123256200-123256300'},
        # or for multiple intervals:
        #intervalFilter: {intervals: ['chr10:123256200-123256300', 'chr10:123256290-123256350']},
        # or using a BED file - NOTE this should be 0-based, Exomiser otherwise uses 1-based coordinates in line with VCF
        #intervalFilter: {bed: /full/path/to/bed_file.bed},
        #genePanelFilter: {geneSymbols: ['FGFR1','FGFR2']},
        #failedVariantFilter: {},
        #qualityFilter: {minQuality: 50.0},
        variantEffectFilter: {
            remove: [
                FIVE_PRIME_UTR_EXON_VARIANT,
                FIVE_PRIME_UTR_INTRON_VARIANT,
                THREE_PRIME_UTR_EXON_VARIANT,
                THREE_PRIME_UTR_INTRON_VARIANT,
                NON_CODING_TRANSCRIPT_EXON_VARIANT,
                NON_CODING_TRANSCRIPT_INTRON_VARIANT,
                CODING_TRANSCRIPT_INTRON_VARIANT,
                UPSTREAM_GENE_VARIANT,
                DOWNSTREAM_GENE_VARIANT,
                INTERGENIC_VARIANT,
                REGULATORY_REGION_VARIANT
            ]
        },
        #knownVariantFilter: {}, #removes variants represented in the database
        frequencyFilter: {maxFrequency: 2.0},
        pathogenicityFilter: {keepNonPathogenic: true},
        #inheritanceFilter and omimPrioritiser should always run AFTER all other filters have completed
        #they will analyse genes according to the specified modeOfInheritance above- UNDEFINED will not be analysed.
        inheritanceFilter: {},
        #omimPrioritiser isn't mandatory.
        omimPrioritiser: {},
        #priorityScoreFilter: {minPriorityScore: 0.4},
        #Other prioritisers: Only combine omimPrioritiser with one of these.
        #Don't include any if you only want to filter the variants.
        hiPhivePrioritiser: {},
        # or run hiPhive in benchmarking mode: 
        #hiPhivePrioritiser: {runParams: 'mouse'},
        #phivePrioritiser: {}
        #phenixPrioritiser: {}
        #exomeWalkerPrioritiser: {seedGeneIds: [11111, 22222, 33333]}
    ]
  ped: null
  proband: 
  steps:
  - hiPhivePrioritiser: {}
  - priorityScoreFilter:
      minPriorityScore: 0.501
      priorityType: HIPHIVE_PRIORITY
  - regulatoryFeatureFilter: {}
  - frequencyFilter:
      maxFrequency: 2.0
  - pathogenicityFilter:
      keepNonPathogenic: true
  - inheritanceFilter: {}
  - omimPrioritiser: {}
  vcf: 
outputOptions:
  numGenes: 0
  outputContributingVariantsOnly: false
  outputFormats:
  - HTML
  - JSON
  - TSV_GENE
  - TSV_VARIANT
  - VCF
  outputPrefix:
