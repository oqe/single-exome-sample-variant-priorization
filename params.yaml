
# Sample table(s)
# main.nf uses input_fofn
# genopheno_analysis uses input_fofn_preexisting_vcfs
########################################

### Samples to be extracted and preprared to single sample vcfs and analyzed
#### column 1: samplename in (cohort) vcf file
#### column 2: secondary samplename (for example from redcap database)
#### column 3: hpo ids in format of: ['HPO:YYYYY', 'HPO:YYYYY']
#### column 4: cohort prefix
#### column 5: cohort vcf file (full path)
#### column 6: cohort output directory (where you want your results to be saved, 
####    will generate further folders by <samplename_combination_from vcf and redcap name>/<date of analysis YYYY-MM-DD>)

# 'main.nf' uses this ONLY
input_fofn: ""

# --------------------------------------

### Samples(already extracted and prepared to individual vcfs) to be analyzed
#### column 1: samplename in sample vcf file
#### column 2: secondary samplename (for example from redcap database)
#### column 3: hpo ids in format of: ['HPO:YYYYY', 'HPO:YYYYY']
#### column 4: cohort_prefix
#### column 5: sample vcf file (full path)
#### column 6: (main/cohort) output directory (where you want your results to be saved, 
####    further folders are generated by <samplename_combination_from vcf and redcap name>/<date of analysis YYYY-MM-DD>)

# 'genopheno_analysis.nf' uses this only
input_fofn_preexisting_vcfs: ""

########################################
# Whether secondary samplenmae is used first in samplename combination 
#  (samplename_combo variable) which is used in output subfolder name generation
#  if secondary samplename is given in input_fofn... table.

secondary_samplename_first: true

########################################

# Exomiser 

exomiser_batchmode: true

exomiser_path: "/reference_annotations/exomiser/exomiser-cli-13.0.0/exomiser-cli-13.0.0.jar"
exomiser_config: "/reference_annotations/exomiser/exomiser-cli-13.0.0/application.properties"

exomiser_yaml_template: "/templates/exomiser_13.0.0_hg38_template.yaml"
exomiser_output_prefix: "Exomiser-13.0.0"

# LIRICAL

lirical_path: "/reference_annotations/LIRICAL/v1.3.4/LIRICAL.jar"
lirical_yaml_template: "/templates/lirical_1.3.4_template.oskari.yaml" 
lirical_output_prefix: "LIRICAL-1.3.4"

# Conda enviroment .yaml or existing local directory to conda enviroment
conda_path: "/research/work/kotimone/miniconda3/envs/variant-tools/"

## Conda enviroment related tools

vt_path: "vt"
vt_genome: "/reference_annotations/vt/Homo_sapiens_assembly38.fasta"

bgzip_path: "bgzip"
tabix_path: "tabix"

gatk_path: "gatk"

# Reference file

fasta: "/reference_annotations/GATK-bundle/hg38/v0/v0/Homo_sapiens_assembly38.fasta"
